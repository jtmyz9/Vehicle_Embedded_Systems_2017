
Display v1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000060  00000000  00000000  00000202  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000361  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000019c  00000000  00000000  0000067d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033c  00000000  00000000  00000819  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00000b58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034c  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000138  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
   2:	00 00       	nop
   4:	4f c0       	rjmp	.+158    	; 0xa4 <__bad_interrupt>
   6:	00 00       	nop
   8:	4d c0       	rjmp	.+154    	; 0xa4 <__bad_interrupt>
   a:	00 00       	nop
   c:	4b c0       	rjmp	.+150    	; 0xa4 <__bad_interrupt>
   e:	00 00       	nop
  10:	49 c0       	rjmp	.+146    	; 0xa4 <__bad_interrupt>
  12:	00 00       	nop
  14:	47 c0       	rjmp	.+142    	; 0xa4 <__bad_interrupt>
  16:	00 00       	nop
  18:	45 c0       	rjmp	.+138    	; 0xa4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	43 c0       	rjmp	.+134    	; 0xa4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	41 c0       	rjmp	.+130    	; 0xa4 <__bad_interrupt>
  22:	00 00       	nop
  24:	3f c0       	rjmp	.+126    	; 0xa4 <__bad_interrupt>
  26:	00 00       	nop
  28:	3d c0       	rjmp	.+122    	; 0xa4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3b c0       	rjmp	.+118    	; 0xa4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	39 c0       	rjmp	.+114    	; 0xa4 <__bad_interrupt>
  32:	00 00       	nop
  34:	37 c0       	rjmp	.+110    	; 0xa4 <__bad_interrupt>
  36:	00 00       	nop
  38:	35 c0       	rjmp	.+106    	; 0xa4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	33 c0       	rjmp	.+102    	; 0xa4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	31 c0       	rjmp	.+98     	; 0xa4 <__bad_interrupt>
  42:	00 00       	nop
  44:	2f c0       	rjmp	.+94     	; 0xa4 <__bad_interrupt>
  46:	00 00       	nop
  48:	2d c0       	rjmp	.+90     	; 0xa4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2b c0       	rjmp	.+86     	; 0xa4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	29 c0       	rjmp	.+82     	; 0xa4 <__bad_interrupt>
  52:	00 00       	nop
  54:	27 c0       	rjmp	.+78     	; 0xa4 <__bad_interrupt>
  56:	00 00       	nop
  58:	25 c0       	rjmp	.+74     	; 0xa4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	23 c0       	rjmp	.+70     	; 0xa4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	21 c0       	rjmp	.+66     	; 0xa4 <__bad_interrupt>
  62:	00 00       	nop
  64:	1f c0       	rjmp	.+62     	; 0xa4 <__bad_interrupt>
  66:	00 00       	nop
  68:	1d c0       	rjmp	.+58     	; 0xa4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1b c0       	rjmp	.+54     	; 0xa4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	19 c0       	rjmp	.+50     	; 0xa4 <__bad_interrupt>
  72:	00 00       	nop
  74:	17 c0       	rjmp	.+46     	; 0xa4 <__bad_interrupt>
  76:	00 00       	nop
  78:	15 c0       	rjmp	.+42     	; 0xa4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	13 c0       	rjmp	.+38     	; 0xa4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	11 c0       	rjmp	.+34     	; 0xa4 <__bad_interrupt>
  82:	00 00       	nop
  84:	0f c0       	rjmp	.+30     	; 0xa4 <__bad_interrupt>
  86:	00 00       	nop
  88:	0d c0       	rjmp	.+26     	; 0xa4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	0b c0       	rjmp	.+22     	; 0xa4 <__bad_interrupt>
  8e:	00 00       	nop
  90:	09 c0       	rjmp	.+18     	; 0xa4 <__bad_interrupt>
	...

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61
  a0:	23 d0       	rcall	.+70     	; 0xe8 <main>
  a2:	83 c0       	rjmp	.+262    	; 0x1aa <_exit>

000000a4 <__bad_interrupt>:
  a4:	ad cf       	rjmp	.-166    	; 0x0 <__vectors>

000000a6 <_Z11spiSendBytec>:
    // Bear in mind that if you only have three digits, and
    // try to display something like "-256" all that will display
    // will be "256" because it needs an extra fourth digit to
    // display the sign.

}
  a6:	8e bd       	out	0x2e, r24	; 46
  a8:	0d b4       	in	r0, 0x2d	; 45
  aa:	07 fe       	sbrs	r0, 7
  ac:	fd cf       	rjmp	.-6      	; 0xa8 <_Z11spiSendBytec+0x2>
  ae:	08 95       	ret

000000b0 <_Z17MAX7219_writeDatacc>:
  b0:	cf 93       	push	r28
  b2:	c6 2f       	mov	r28, r22
  b4:	28 98       	cbi	0x05, 0	; 5
  b6:	f7 df       	rcall	.-18     	; 0xa6 <_Z11spiSendBytec>
  b8:	8c 2f       	mov	r24, r28
  ba:	f5 df       	rcall	.-22     	; 0xa6 <_Z11spiSendBytec>
  bc:	28 9a       	sbi	0x05, 0	; 5
  be:	cf 91       	pop	r28
  c0:	08 95       	ret

000000c2 <_Z8max_initv>:


void max_init()
{
    // SCK MOSI CS/LOAD/SS
    DDRB |= (1 << PIN_SCK) | (1 << PIN_MOSI) | (1 << PIN_SS);
  c2:	84 b1       	in	r24, 0x04	; 4
  c4:	87 60       	ori	r24, 0x07	; 7
  c6:	84 b9       	out	0x04, r24	; 4

    // SPI Enable, Master mode
    SPCR |= (1 << SPE) | (1 << MSTR)| (1<<SPR1);
  c8:	8c b5       	in	r24, 0x2c	; 44
  ca:	82 65       	ori	r24, 0x52	; 82
  cc:	8c bd       	out	0x2c, r24	; 44

    // Decode mode to "Font Code-B"
    MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
  ce:	6f ef       	ldi	r22, 0xFF	; 255
  d0:	89 e0       	ldi	r24, 0x09	; 9
  d2:	ee df       	rcall	.-36     	; 0xb0 <_Z17MAX7219_writeDatacc>

    // Scan limit runs from 0.
    MAX7219_writeData(MAX7219_MODE_SCAN_LIMIT, 0);
  d4:	60 e0       	ldi	r22, 0x00	; 0
  d6:	8b e0       	ldi	r24, 0x0B	; 11
  d8:	eb df       	rcall	.-42     	; 0xb0 <_Z17MAX7219_writeDatacc>
    MAX7219_writeData(MAX7219_MODE_INTENSITY, 8);
  da:	68 e0       	ldi	r22, 0x08	; 8
  dc:	8a e0       	ldi	r24, 0x0A	; 10
  de:	e8 df       	rcall	.-48     	; 0xb0 <_Z17MAX7219_writeDatacc>
    MAX7219_writeData(MAX7219_MODE_POWER, ON);
  e0:	61 e0       	ldi	r22, 0x01	; 1
  e2:	8c e0       	ldi	r24, 0x0C	; 12
  e4:	e5 cf       	rjmp	.-54     	; 0xb0 <_Z17MAX7219_writeDatacc>
  e6:	08 95       	ret

000000e8 <main>:
#include "max7219.c"

int main(void)
{
	
	max_init();
  e8:	ec df       	rcall	.-40     	; 0xc2 <_Z8max_initv>
	
	    MAX7219_LOAD0;
  ea:	28 98       	cbi	0x05, 0	; 5
	    // Send the register where the data will be stored
	    spiSendByte(0x01);
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	db df       	rcall	.-74     	; 0xa6 <_Z11spiSendBytec>
	    // Send the data to be stored
	    spiSendByte(0x08);
  f0:	88 e0       	ldi	r24, 0x08	; 8
  f2:	d9 df       	rcall	.-78     	; 0xa6 <_Z11spiSendBytec>
	    MAX7219_LOAD1;
  f4:	28 9a       	sbi	0x05, 0	; 5
		_delay_ms(10);
	}
	*/
	
	
	uart_init();
  f6:	04 d0       	rcall	.+8      	; 0x100 <_Z9uart_initv>
	
	/* Replace with your application code */
	//   while (1)
	{
		page_test();
  f8:	0f d0       	rcall	.+30     	; 0x118 <_Z9page_testv>
	}
}
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	08 95       	ret

00000100 <_Z9uart_initv>:
 100:	88 e1       	ldi	r24, 0x18	; 24
 102:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 106:	86 e0       	ldi	r24, 0x06	; 6
 108:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 10c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 110:	87 e6       	ldi	r24, 0x67	; 103
 112:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 116:	08 95       	ret

00000118 <_Z9page_testv>:
 118:	e0 ec       	ldi	r30, 0xC0	; 192
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	85 ff       	sbrs	r24, 5
 120:	fd cf       	rjmp	.-6      	; 0x11c <_Z9page_testv+0x4>
 122:	88 e0       	ldi	r24, 0x08	; 8
 124:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 128:	e0 ec       	ldi	r30, 0xC0	; 192
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	85 ff       	sbrs	r24, 5
 130:	fd cf       	rjmp	.-6      	; 0x12c <_Z9page_testv+0x14>
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 138:	e1 e8       	ldi	r30, 0x81	; 129
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	85 60       	ori	r24, 0x05	; 5
 140:	80 83       	st	Z, r24
 142:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 146:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	e0 ec       	ldi	r30, 0xC0	; 192
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	c6 ec       	ldi	r28, 0xC6	; 198
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	a4 e8       	ldi	r26, 0x84	; 132
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	5c e0       	ldi	r21, 0x0C	; 12
 15c:	4c e6       	ldi	r20, 0x6C	; 108
 15e:	27 2f       	mov	r18, r23
 160:	36 2f       	mov	r19, r22
 162:	80 81       	ld	r24, Z
 164:	85 ff       	sbrs	r24, 5
 166:	fd cf       	rjmp	.-6      	; 0x162 <_Z9page_testv+0x4a>
 168:	18 82       	st	Y, r1
 16a:	80 81       	ld	r24, Z
 16c:	85 ff       	sbrs	r24, 5
 16e:	fd cf       	rjmp	.-6      	; 0x16a <_Z9page_testv+0x52>
 170:	28 83       	st	Y, r18
 172:	80 81       	ld	r24, Z
 174:	85 ff       	sbrs	r24, 5
 176:	fd cf       	rjmp	.-6      	; 0x172 <_Z9page_testv+0x5a>
 178:	38 83       	st	Y, r19
 17a:	8d 91       	ld	r24, X+
 17c:	9c 91       	ld	r25, X
 17e:	11 97       	sbiw	r26, 0x01	; 1
 180:	8d 30       	cpi	r24, 0x0D	; 13
 182:	93 40       	sbci	r25, 0x03	; 3
 184:	d0 f3       	brcs	.-12     	; 0x17a <_Z9page_testv+0x62>
 186:	11 96       	adiw	r26, 0x01	; 1
 188:	1c 92       	st	X, r1
 18a:	1e 92       	st	-X, r1
 18c:	2c 59       	subi	r18, 0x9C	; 156
 18e:	3f 4f       	sbci	r19, 0xFF	; 255
 190:	2c 3b       	cpi	r18, 0xBC	; 188
 192:	84 e3       	ldi	r24, 0x34	; 52
 194:	38 07       	cpc	r19, r24
 196:	29 f7       	brne	.-54     	; 0x162 <_Z9page_testv+0x4a>
 198:	80 81       	ld	r24, Z
 19a:	85 ff       	sbrs	r24, 5
 19c:	fd cf       	rjmp	.-6      	; 0x198 <_Z9page_testv+0x80>
 19e:	58 83       	st	Y, r21
 1a0:	80 81       	ld	r24, Z
 1a2:	85 ff       	sbrs	r24, 5
 1a4:	fd cf       	rjmp	.-6      	; 0x1a0 <_Z9page_testv+0x88>
 1a6:	48 83       	st	Y, r20
 1a8:	da cf       	rjmp	.-76     	; 0x15e <_Z9page_testv+0x46>

000001aa <_exit>:
 1aa:	f8 94       	cli

000001ac <__stop_program>:
 1ac:	ff cf       	rjmp	.-2      	; 0x1ac <__stop_program>
